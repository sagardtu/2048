{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\OneDrive\\\\Desktop\\\\2048\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZE = 4;\nconst generateEmptyGrid = () => {\n  return Array(SIZE).fill().map(() => Array(SIZE).fill(0));\n};\nconst addRandomTile = grid => {\n  const emptyCells = [];\n  for (let r = 0; r < SIZE; r++) {\n    for (let c = 0; c < SIZE; c++) {\n      if (grid[r][c] === 0) emptyCells.push([r, c]);\n    }\n  }\n  if (emptyCells.length === 0) return grid;\n  const [r, c] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n  grid[r][c] = Math.random() < 0.9 ? 2 : 4;\n  return grid;\n};\nconst isGameOver = grid => {\n  for (let r = 0; r < SIZE; r++) {\n    for (let c = 0; c < SIZE; c++) {\n      if (grid[r][c] === 0) return false;\n      if (c < SIZE - 1 && grid[r][c] === grid[r][c + 1]) return false;\n      if (r < SIZE - 1 && grid[r][c] === grid[r + 1][c]) return false;\n    }\n  }\n  return true;\n};\nconst transpose = grid => grid[0].map((_, c) => grid.map(row => row[c]));\nconst reverse = grid => grid.map(row => [...row].reverse());\nconst operateRow = row => {\n  let scoreGained = 0;\n  let newRow = row.filter(val => val !== 0);\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      scoreGained += newRow[i];\n      newRow[i + 1] = 0;\n    }\n  }\n  newRow = newRow.filter(val => val !== 0);\n  while (newRow.length < SIZE) newRow.push(0);\n  return {\n    row: newRow,\n    scoreGained\n  };\n};\nconst App = () => {\n  _s();\n  const [grid, setGrid] = useState(() => addRandomTile(addRandomTile(generateEmptyGrid())));\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const restartGame = () => {\n    setGrid(addRandomTile(addRandomTile(generateEmptyGrid())));\n    setScore(0);\n  };\n  const handleMove = direction => {\n    let moved = false;\n    let newScore = 0;\n    const applyOperation = g => {\n      return g.map(row => {\n        const {\n          row: newRow,\n          scoreGained\n        } = operateRow(row);\n        newScore += scoreGained;\n        return newRow;\n      });\n    };\n    let newGrid = [...grid];\n    if (direction === \"ArrowLeft\") {\n      newGrid = applyOperation(newGrid);\n    } else if (direction === \"ArrowRight\") {\n      newGrid = reverse(applyOperation(reverse(newGrid)));\n    } else if (direction === \"ArrowUp\") {\n      newGrid = transpose(applyOperation(transpose(newGrid)));\n    } else if (direction === \"ArrowDown\") {\n      newGrid = transpose(reverse(applyOperation(reverse(transpose(newGrid)))));\n    }\n    if (JSON.stringify(newGrid) !== JSON.stringify(grid)) {\n      moved = true;\n    }\n    if (moved) {\n      const updatedGrid = addRandomTile(newGrid);\n      setGrid(updatedGrid);\n      setScore(prev => {\n        const newTotal = prev + newScore;\n        if (newTotal > highScore) {\n          setHighScore(newTotal);\n        }\n        return newTotal;\n      });\n      if (isGameOver(updatedGrid)) {\n        setTimeout(() => {\n          alert(\"Game Over! Click Restart to play again.\");\n        }, 100);\n      }\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(e.key)) {\n        e.preventDefault();\n        handleMove(e.key);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [grid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"howToPlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"howToPlayBtn\",\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"howToPlayModal\",\n        class: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"closeModal\",\n            class: \"close\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"How to Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"- Use arrow keys (\\u2191 \\u2193 \\u2190 \\u2192) to move tiles. - When two tiles with\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"- the same number touch, they merge into one. - Your goal is to\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", \"- create a tile with the number 2048. - Game ends when no moves are left.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"2048 Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart-btn\",\n        onClick: restartGame,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: cell !== 0 ? cell : \"\"\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High Score: \", highScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"foot\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This website is developed by Sagar Kumar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cYsu5J16qzX4iia3FAYvx2vC78A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SIZE","generateEmptyGrid","Array","fill","map","addRandomTile","grid","emptyCells","r","c","push","length","Math","floor","random","isGameOver","transpose","_","row","reverse","operateRow","scoreGained","newRow","filter","val","i","App","_s","setGrid","score","setScore","highScore","setHighScore","restartGame","handleMove","direction","moved","newScore","applyOperation","g","newGrid","JSON","stringify","updatedGrid","prev","newTotal","setTimeout","alert","handleKeyDown","e","includes","key","preventDefault","window","addEventListener","removeEventListener","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","class","onClick","cell","j","_c","$RefreshReg$"],"sources":["C:/Users/sagar/OneDrive/Desktop/2048/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst SIZE = 4;\n\nconst generateEmptyGrid = () => {\n  return Array(SIZE)\n    .fill()\n    .map(() => Array(SIZE).fill(0));\n};\n\nconst addRandomTile = (grid) => {\n  const emptyCells = [];\n  for (let r = 0; r < SIZE; r++) {\n    for (let c = 0; c < SIZE; c++) {\n      if (grid[r][c] === 0) emptyCells.push([r, c]);\n    }\n  }\n  if (emptyCells.length === 0) return grid;\n  const [r, c] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n  grid[r][c] = Math.random() < 0.9 ? 2 : 4;\n  return grid;\n};\n\nconst isGameOver = (grid) => {\n  for (let r = 0; r < SIZE; r++) {\n    for (let c = 0; c < SIZE; c++) {\n      if (grid[r][c] === 0) return false;\n      if (c < SIZE - 1 && grid[r][c] === grid[r][c + 1]) return false;\n      if (r < SIZE - 1 && grid[r][c] === grid[r + 1][c]) return false;\n    }\n  }\n  return true;\n};\n\nconst transpose = (grid) => grid[0].map((_, c) => grid.map((row) => row[c]));\nconst reverse = (grid) => grid.map((row) => [...row].reverse());\n\nconst operateRow = (row) => {\n  let scoreGained = 0;\n  let newRow = row.filter((val) => val !== 0);\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      scoreGained += newRow[i];\n      newRow[i + 1] = 0;\n    }\n  }\n  newRow = newRow.filter((val) => val !== 0);\n  while (newRow.length < SIZE) newRow.push(0);\n  return { row: newRow, scoreGained };\n};\n\nconst App = () => {\n  const [grid, setGrid] = useState(() =>\n    addRandomTile(addRandomTile(generateEmptyGrid()))\n  );\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  const restartGame = () => {\n    setGrid(addRandomTile(addRandomTile(generateEmptyGrid())));\n    setScore(0);\n  };\n\n  const handleMove = (direction) => {\n    let moved = false;\n    let newScore = 0;\n\n    const applyOperation = (g) => {\n      return g.map((row) => {\n        const { row: newRow, scoreGained } = operateRow(row);\n        newScore += scoreGained;\n        return newRow;\n      });\n    };\n\n    let newGrid = [...grid];\n\n    if (direction === \"ArrowLeft\") {\n      newGrid = applyOperation(newGrid);\n    } else if (direction === \"ArrowRight\") {\n      newGrid = reverse(applyOperation(reverse(newGrid)));\n    } else if (direction === \"ArrowUp\") {\n      newGrid = transpose(applyOperation(transpose(newGrid)));\n    } else if (direction === \"ArrowDown\") {\n      newGrid = transpose(reverse(applyOperation(reverse(transpose(newGrid)))));\n    }\n\n    if (JSON.stringify(newGrid) !== JSON.stringify(grid)) {\n      moved = true;\n    }\n\n    if (moved) {\n      const updatedGrid = addRandomTile(newGrid);\n      setGrid(updatedGrid);\n      setScore((prev) => {\n        const newTotal = prev + newScore;\n        if (newTotal > highScore) {\n          setHighScore(newTotal);\n        }\n        return newTotal;\n      });\n\n      if (isGameOver(updatedGrid)) {\n        setTimeout(() => {\n          alert(\"Game Over! Click Restart to play again.\");\n        }, 100);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].includes(e.key)) {\n        e.preventDefault();\n        handleMove(e.key);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [grid]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"howToPlay\">\n        <button id=\"howToPlayBtn\">How to Play</button>\n        <div id=\"howToPlayModal\" class=\"modal\">\n          <div class=\"modal-content\">\n            <span id=\"closeModal\" class=\"close\">\n              &times;\n            </span>\n            <h2>How to Play</h2>\n            <p>\n              {\" \"}\n              - Use arrow keys (↑ ↓ ← →) to move tiles. - When two tiles with\n            </p>\n            <p>\n              {\" \"}\n              - the same number touch, they merge into one. - Your goal is to\n            </p>\n            <p>\n              {\" \"}\n              - create a tile with the number 2048. - Game ends when no moves\n              are left.\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"title\">\n        <h1>2048 Game</h1>\n        <button className=\"restart-btn\" onClick={restartGame}>\n          Restart\n        </button>\n      </div>\n\n      <div className=\"grid\">\n        {grid.map((row, i) => (\n          <div className=\"row\" key={i}>\n            {row.map((cell, j) => (\n              <div className=\"cell\" key={j}>\n                {cell !== 0 ? cell : \"\"}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div className=\"score\">\n        <p>Score: {score}</p>\n        <p>High Score: {highScore}</p>\n      </div>\n\n      <div className=\"foot\">\n        <p>This website is developed by Sagar Kumar</p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,IAAI,GAAG,CAAC;AAEd,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,OAAOC,KAAK,CAACF,IAAI,CAAC,CACfG,IAAI,CAAC,CAAC,CACNC,GAAG,CAAC,MAAMF,KAAK,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC;AAED,MAAME,aAAa,GAAIC,IAAI,IAAK;EAC9B,MAAMC,UAAU,GAAG,EAAE;EACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,IAAI,EAAEQ,CAAC,EAAE,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,IAAI,EAAES,CAAC,EAAE,EAAE;MAC7B,IAAIH,IAAI,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,KAAK,CAAC,EAAEF,UAAU,CAACG,IAAI,CAAC,CAACF,CAAC,EAAEC,CAAC,CAAC,CAAC;IAC/C;EACF;EACA,IAAIF,UAAU,CAACI,MAAM,KAAK,CAAC,EAAE,OAAOL,IAAI;EACxC,MAAM,CAACE,CAAC,EAAEC,CAAC,CAAC,GAAGF,UAAU,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,UAAU,CAACI,MAAM,CAAC,CAAC;EACxEL,IAAI,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGG,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;EACxC,OAAOR,IAAI;AACb,CAAC;AAED,MAAMS,UAAU,GAAIT,IAAI,IAAK;EAC3B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,IAAI,EAAEQ,CAAC,EAAE,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,IAAI,EAAES,CAAC,EAAE,EAAE;MAC7B,IAAIH,IAAI,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,KAAK;MAClC,IAAIA,CAAC,GAAGT,IAAI,GAAG,CAAC,IAAIM,IAAI,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,KAAKH,IAAI,CAACE,CAAC,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,KAAK;MAC/D,IAAID,CAAC,GAAGR,IAAI,GAAG,CAAC,IAAIM,IAAI,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,KAAKH,IAAI,CAACE,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,EAAE,OAAO,KAAK;IACjE;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAED,MAAMO,SAAS,GAAIV,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAACF,GAAG,CAAC,CAACa,CAAC,EAAER,CAAC,KAAKH,IAAI,CAACF,GAAG,CAAEc,GAAG,IAAKA,GAAG,CAACT,CAAC,CAAC,CAAC,CAAC;AAC5E,MAAMU,OAAO,GAAIb,IAAI,IAAKA,IAAI,CAACF,GAAG,CAAEc,GAAG,IAAK,CAAC,GAAGA,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;AAE/D,MAAMC,UAAU,GAAIF,GAAG,IAAK;EAC1B,IAAIG,WAAW,GAAG,CAAC;EACnB,IAAIC,MAAM,GAAGJ,GAAG,CAACK,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAK,CAAC,CAAC;EAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACX,MAAM,GAAG,CAAC,EAAEc,CAAC,EAAE,EAAE;IAC1C,IAAIH,MAAM,CAACG,CAAC,CAAC,KAAKH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,EAAE;MAC/BH,MAAM,CAACG,CAAC,CAAC,IAAI,CAAC;MACdJ,WAAW,IAAIC,MAAM,CAACG,CAAC,CAAC;MACxBH,MAAM,CAACG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACnB;EACF;EACAH,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAK,CAAC,CAAC;EAC1C,OAAOF,MAAM,CAACX,MAAM,GAAGX,IAAI,EAAEsB,MAAM,CAACZ,IAAI,CAAC,CAAC,CAAC;EAC3C,OAAO;IAAEQ,GAAG,EAAEI,MAAM;IAAED;EAAY,CAAC;AACrC,CAAC;AAED,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACrB,IAAI,EAAEsB,OAAO,CAAC,GAAG/B,QAAQ,CAAC,MAC/BQ,aAAa,CAACA,aAAa,CAACJ,iBAAiB,CAAC,CAAC,CAAC,CAClD,CAAC;EACD,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMoC,WAAW,GAAGA,CAAA,KAAM;IACxBL,OAAO,CAACvB,aAAa,CAACA,aAAa,CAACJ,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D6B,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,MAAMI,UAAU,GAAIC,SAAS,IAAK;IAChC,IAAIC,KAAK,GAAG,KAAK;IACjB,IAAIC,QAAQ,GAAG,CAAC;IAEhB,MAAMC,cAAc,GAAIC,CAAC,IAAK;MAC5B,OAAOA,CAAC,CAACnC,GAAG,CAAEc,GAAG,IAAK;QACpB,MAAM;UAAEA,GAAG,EAAEI,MAAM;UAAED;QAAY,CAAC,GAAGD,UAAU,CAACF,GAAG,CAAC;QACpDmB,QAAQ,IAAIhB,WAAW;QACvB,OAAOC,MAAM;MACf,CAAC,CAAC;IACJ,CAAC;IAED,IAAIkB,OAAO,GAAG,CAAC,GAAGlC,IAAI,CAAC;IAEvB,IAAI6B,SAAS,KAAK,WAAW,EAAE;MAC7BK,OAAO,GAAGF,cAAc,CAACE,OAAO,CAAC;IACnC,CAAC,MAAM,IAAIL,SAAS,KAAK,YAAY,EAAE;MACrCK,OAAO,GAAGrB,OAAO,CAACmB,cAAc,CAACnB,OAAO,CAACqB,OAAO,CAAC,CAAC,CAAC;IACrD,CAAC,MAAM,IAAIL,SAAS,KAAK,SAAS,EAAE;MAClCK,OAAO,GAAGxB,SAAS,CAACsB,cAAc,CAACtB,SAAS,CAACwB,OAAO,CAAC,CAAC,CAAC;IACzD,CAAC,MAAM,IAAIL,SAAS,KAAK,WAAW,EAAE;MACpCK,OAAO,GAAGxB,SAAS,CAACG,OAAO,CAACmB,cAAc,CAACnB,OAAO,CAACH,SAAS,CAACwB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E;IAEA,IAAIC,IAAI,CAACC,SAAS,CAACF,OAAO,CAAC,KAAKC,IAAI,CAACC,SAAS,CAACpC,IAAI,CAAC,EAAE;MACpD8B,KAAK,GAAG,IAAI;IACd;IAEA,IAAIA,KAAK,EAAE;MACT,MAAMO,WAAW,GAAGtC,aAAa,CAACmC,OAAO,CAAC;MAC1CZ,OAAO,CAACe,WAAW,CAAC;MACpBb,QAAQ,CAAEc,IAAI,IAAK;QACjB,MAAMC,QAAQ,GAAGD,IAAI,GAAGP,QAAQ;QAChC,IAAIQ,QAAQ,GAAGd,SAAS,EAAE;UACxBC,YAAY,CAACa,QAAQ,CAAC;QACxB;QACA,OAAOA,QAAQ;MACjB,CAAC,CAAC;MAEF,IAAI9B,UAAU,CAAC4B,WAAW,CAAC,EAAE;QAC3BG,UAAU,CAAC,MAAM;UACfC,KAAK,CAAC,yCAAyC,CAAC;QAClD,CAAC,EAAE,GAAG,CAAC;MACT;IACF;EACF,CAAC;EAEDnD,SAAS,CAAC,MAAM;IACd,MAAMoD,aAAa,GAAIC,CAAC,IAAK;MAC3B,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAACC,QAAQ,CAACD,CAAC,CAACE,GAAG,CAAC,EAAE;QACvEF,CAAC,CAACG,cAAc,CAAC,CAAC;QAClBlB,UAAU,CAACe,CAAC,CAACE,GAAG,CAAC;MACnB;IACF,CAAC;IACDE,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,aAAa,CAAC;IACjD,OAAO,MAAMK,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;EACnE,CAAC,EAAE,CAAC1C,IAAI,CAAC,CAAC;EAEV,oBACEP,OAAA;IAAKyD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1D,OAAA;MAAKyD,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB1D,OAAA;QAAQ2D,EAAE,EAAC,cAAc;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9C/D,OAAA;QAAK2D,EAAE,EAAC,gBAAgB;QAACK,KAAK,EAAC,OAAO;QAAAN,QAAA,eACpC1D,OAAA;UAAKgE,KAAK,EAAC,eAAe;UAAAN,QAAA,gBACxB1D,OAAA;YAAM2D,EAAE,EAAC,YAAY;YAACK,KAAK,EAAC,OAAO;YAAAN,QAAA,EAAC;UAEpC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACP/D,OAAA;YAAA0D,QAAA,EAAI;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpB/D,OAAA;YAAA0D,QAAA,GACG,GAAG,EAAC,qFAEP;UAAA;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJ/D,OAAA;YAAA0D,QAAA,GACG,GAAG,EAAC,iEAEP;UAAA;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJ/D,OAAA;YAAA0D,QAAA,GACG,GAAG,EAAC,2EAGP;UAAA;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN/D,OAAA;MAAKyD,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpB1D,OAAA;QAAA0D,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB/D,OAAA;QAAQyD,SAAS,EAAC,aAAa;QAACQ,OAAO,EAAE/B,WAAY;QAAAwB,QAAA,EAAC;MAEtD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN/D,OAAA;MAAKyD,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBnD,IAAI,CAACF,GAAG,CAAC,CAACc,GAAG,EAAEO,CAAC,kBACf1B,OAAA;QAAKyD,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBvC,GAAG,CAACd,GAAG,CAAC,CAAC6D,IAAI,EAAEC,CAAC,kBACfnE,OAAA;UAAKyD,SAAS,EAAC,MAAM;UAAAC,QAAA,EAClBQ,IAAI,KAAK,CAAC,GAAGA,IAAI,GAAG;QAAE,GADEC,CAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvB,CACN;MAAC,GALsBrC,CAAC;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMtB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/D,OAAA;MAAKyD,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpB1D,OAAA;QAAA0D,QAAA,GAAG,SAAO,EAAC5B,KAAK;MAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB/D,OAAA;QAAA0D,QAAA,GAAG,cAAY,EAAC1B,SAAS;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEN/D,OAAA;MAAKyD,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnB1D,OAAA;QAAA0D,QAAA,EAAG;MAAwC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CA5HID,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA8HT,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}